// Code generated by protoc-gen-go. DO NOT EDIT.
// source: policy.proto

package policyservice

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Chunk struct {
	Content              []byte   `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chunk) Reset()         { *m = Chunk{} }
func (m *Chunk) String() string { return proto.CompactTextString(m) }
func (*Chunk) ProtoMessage()    {}
func (*Chunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac3b897852294d6a, []int{0}
}

func (m *Chunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chunk.Unmarshal(m, b)
}
func (m *Chunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chunk.Marshal(b, m, deterministic)
}
func (m *Chunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chunk.Merge(m, src)
}
func (m *Chunk) XXX_Size() int {
	return xxx_messageInfo_Chunk.Size(m)
}
func (m *Chunk) XXX_DiscardUnknown() {
	xxx_messageInfo_Chunk.DiscardUnknown(m)
}

var xxx_messageInfo_Chunk proto.InternalMessageInfo

func (m *Chunk) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type InvokeRequest struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Policy               string            `protobuf:"bytes,2,opt,name=policy,proto3" json:"policy,omitempty"`
	Headers              map[string]string `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Body                 []byte            `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *InvokeRequest) Reset()         { *m = InvokeRequest{} }
func (m *InvokeRequest) String() string { return proto.CompactTextString(m) }
func (*InvokeRequest) ProtoMessage()    {}
func (*InvokeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac3b897852294d6a, []int{1}
}

func (m *InvokeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvokeRequest.Unmarshal(m, b)
}
func (m *InvokeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvokeRequest.Marshal(b, m, deterministic)
}
func (m *InvokeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvokeRequest.Merge(m, src)
}
func (m *InvokeRequest) XXX_Size() int {
	return xxx_messageInfo_InvokeRequest.Size(m)
}
func (m *InvokeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InvokeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InvokeRequest proto.InternalMessageInfo

func (m *InvokeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InvokeRequest) GetPolicy() string {
	if m != nil {
		return m.Policy
	}
	return ""
}

func (m *InvokeRequest) GetHeaders() map[string]string {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *InvokeRequest) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type InvokeReply struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	HeadersToAdd         map[string]string `protobuf:"bytes,2,rep,name=headersToAdd,proto3" json:"headersToAdd,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	HeadersToReplace     map[string]string `protobuf:"bytes,3,rep,name=headersToReplace,proto3" json:"headersToReplace,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	HeadersToRemove      []string          `protobuf:"bytes,4,rep,name=headersToRemove,proto3" json:"headersToRemove,omitempty"`
	Body                 []byte            `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *InvokeReply) Reset()         { *m = InvokeReply{} }
func (m *InvokeReply) String() string { return proto.CompactTextString(m) }
func (*InvokeReply) ProtoMessage()    {}
func (*InvokeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac3b897852294d6a, []int{2}
}

func (m *InvokeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvokeReply.Unmarshal(m, b)
}
func (m *InvokeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvokeReply.Marshal(b, m, deterministic)
}
func (m *InvokeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvokeReply.Merge(m, src)
}
func (m *InvokeReply) XXX_Size() int {
	return xxx_messageInfo_InvokeReply.Size(m)
}
func (m *InvokeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_InvokeReply.DiscardUnknown(m)
}

var xxx_messageInfo_InvokeReply proto.InternalMessageInfo

func (m *InvokeReply) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InvokeReply) GetHeadersToAdd() map[string]string {
	if m != nil {
		return m.HeadersToAdd
	}
	return nil
}

func (m *InvokeReply) GetHeadersToReplace() map[string]string {
	if m != nil {
		return m.HeadersToReplace
	}
	return nil
}

func (m *InvokeReply) GetHeadersToRemove() []string {
	if m != nil {
		return m.HeadersToRemove
	}
	return nil
}

func (m *InvokeReply) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

// Policy Server configuration
type Config struct {
	// The cluster name of the policy service.
	Clustername string `protobuf:"bytes,1,opt,name=clustername,proto3" json:"clustername,omitempty"`
	// The policy execution timeout.
	Timeout              uint32   `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac3b897852294d6a, []int{3}
}

func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetClustername() string {
	if m != nil {
		return m.Clustername
	}
	return ""
}

func (m *Config) GetTimeout() uint32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func init() {
	proto.RegisterType((*Chunk)(nil), "policyservice.Chunk")
	proto.RegisterType((*InvokeRequest)(nil), "policyservice.InvokeRequest")
	proto.RegisterMapType((map[string]string)(nil), "policyservice.InvokeRequest.HeadersEntry")
	proto.RegisterType((*InvokeReply)(nil), "policyservice.InvokeReply")
	proto.RegisterMapType((map[string]string)(nil), "policyservice.InvokeReply.HeadersToAddEntry")
	proto.RegisterMapType((map[string]string)(nil), "policyservice.InvokeReply.HeadersToReplaceEntry")
	proto.RegisterType((*Config)(nil), "policyservice.Config")
}

func init() { proto.RegisterFile("policy.proto", fileDescriptor_ac3b897852294d6a) }

var fileDescriptor_ac3b897852294d6a = []byte{
	// 406 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0xc1, 0xae, 0x93, 0x40,
	0x14, 0x0d, 0xd0, 0xf6, 0xe5, 0xdd, 0x52, 0x7d, 0x4e, 0xd4, 0x10, 0xe2, 0x82, 0xd7, 0x15, 0x1a,
	0x43, 0x9a, 0xba, 0x31, 0xdd, 0x18, 0x45, 0x13, 0x4d, 0x5c, 0x10, 0xea, 0xb2, 0x1b, 0x0a, 0xd7,
	0x96, 0x14, 0x66, 0x70, 0x18, 0x50, 0x3e, 0xc3, 0x5f, 0xf0, 0x7b, 0xfc, 0x28, 0xd3, 0x19, 0x68,
	0x68, 0x6b, 0x8d, 0xdd, 0xcd, 0x39, 0x39, 0xf7, 0xdc, 0xc3, 0x99, 0x01, 0xcc, 0x82, 0x65, 0x69,
	0xdc, 0x78, 0x05, 0x67, 0x82, 0x91, 0x89, 0x42, 0x25, 0xf2, 0x3a, 0x8d, 0x71, 0x7a, 0x0f, 0x43,
	0x7f, 0x5b, 0xd1, 0x1d, 0xb1, 0xe0, 0xc6, 0x67, 0x54, 0x20, 0x15, 0x96, 0xe6, 0x68, 0xae, 0x19,
	0x76, 0x70, 0xfa, 0x5b, 0x83, 0xc9, 0x27, 0x5a, 0xb3, 0x1d, 0x86, 0xf8, 0xad, 0xc2, 0x52, 0x90,
	0x07, 0xa0, 0xa7, 0x89, 0x94, 0xdd, 0x86, 0x7a, 0x9a, 0x90, 0xa7, 0x30, 0x52, 0xae, 0x96, 0x2e,
	0xb9, 0x16, 0x11, 0x1f, 0x6e, 0xb6, 0x18, 0x25, 0xc8, 0x4b, 0xcb, 0x70, 0x0c, 0x77, 0x3c, 0x7f,
	0xee, 0x1d, 0x6d, 0xf7, 0x8e, 0x6c, 0xbd, 0x8f, 0x4a, 0xfb, 0x81, 0x0a, 0xde, 0x84, 0xdd, 0x24,
	0x21, 0x30, 0x58, 0xb3, 0xa4, 0xb1, 0x06, 0x32, 0x95, 0x3c, 0xdb, 0x0b, 0x30, 0xfb, 0x62, 0x72,
	0x07, 0xc6, 0x0e, 0x9b, 0x36, 0xd1, 0xfe, 0x48, 0x1e, 0xc3, 0xb0, 0x8e, 0xb2, 0x0a, 0xdb, 0x44,
	0x0a, 0x2c, 0xf4, 0xd7, 0xda, 0xf4, 0xa7, 0x01, 0xe3, 0x6e, 0x6f, 0x91, 0x35, 0x67, 0x1f, 0x13,
	0x80, 0xd9, 0xae, 0xfe, 0xc2, 0xde, 0x26, 0x89, 0xa5, 0xcb, 0xe4, 0x2f, 0x2f, 0x24, 0x2f, 0xb2,
	0xa6, 0xcb, 0x2d, 0xe5, 0x2a, 0xfc, 0x91, 0x03, 0x59, 0xc1, 0xdd, 0x01, 0xef, 0x27, 0xa2, 0x18,
	0xdb, 0x3e, 0x66, 0xff, 0xe3, 0xda, 0x8e, 0x28, 0xe7, 0x33, 0x27, 0xe2, 0xc2, 0xc3, 0x1e, 0x97,
	0xb3, 0x1a, 0xad, 0x81, 0x63, 0xb8, 0xb7, 0xe1, 0x29, 0x7d, 0x68, 0x72, 0xd8, 0x6b, 0xf2, 0x0d,
	0x3c, 0x3a, 0x8b, 0x7f, 0x4d, 0x9d, 0xb6, 0x0f, 0x4f, 0xfe, 0x9a, 0xf4, 0xaa, 0x3b, 0x79, 0x0f,
	0x23, 0x9f, 0xd1, 0xaf, 0xe9, 0x86, 0x38, 0x30, 0x8e, 0xb3, 0xaa, 0x14, 0xc8, 0x69, 0x94, 0x63,
	0x3b, 0xdd, 0xa7, 0xf6, 0x0f, 0x55, 0xa4, 0x39, 0xb2, 0x4a, 0x48, 0x9f, 0x49, 0xd8, 0xc1, 0xf9,
	0x0a, 0xcc, 0x40, 0xd6, 0xb9, 0x44, 0x5e, 0x23, 0x27, 0x9f, 0xc1, 0x54, 0x85, 0x2a, 0x96, 0x3c,
	0xfb, 0xd7, 0xeb, 0xb3, 0xed, 0xcb, 0x77, 0xe1, 0x6a, 0x33, 0xed, 0xdd, 0x0b, 0xb8, 0x8f, 0x59,
	0xee, 0x45, 0x3f, 0xbe, 0x47, 0xcd, 0x89, 0x74, 0x83, 0x14, 0x79, 0x24, 0x30, 0x09, 0xb4, 0x5f,
	0xba, 0x1e, 0x2c, 0xd7, 0x23, 0xf9, 0xaf, 0xbd, 0xfa, 0x13, 0x00, 0x00, 0xff, 0xff, 0x97, 0x8a,
	0x86, 0x42, 0x7b, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PolicyServerClient is the client API for PolicyServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PolicyServerClient interface {
	InvokePolicy(ctx context.Context, opts ...grpc.CallOption) (PolicyServer_InvokePolicyClient, error)
}

type policyServerClient struct {
	cc *grpc.ClientConn
}

func NewPolicyServerClient(cc *grpc.ClientConn) PolicyServerClient {
	return &policyServerClient{cc}
}

func (c *policyServerClient) InvokePolicy(ctx context.Context, opts ...grpc.CallOption) (PolicyServer_InvokePolicyClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PolicyServer_serviceDesc.Streams[0], "/policyservice.PolicyServer/InvokePolicy", opts...)
	if err != nil {
		return nil, err
	}
	x := &policyServerInvokePolicyClient{stream}
	return x, nil
}

type PolicyServer_InvokePolicyClient interface {
	Send(*InvokeRequest) error
	Recv() (*InvokeReply, error)
	grpc.ClientStream
}

type policyServerInvokePolicyClient struct {
	grpc.ClientStream
}

func (x *policyServerInvokePolicyClient) Send(m *InvokeRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *policyServerInvokePolicyClient) Recv() (*InvokeReply, error) {
	m := new(InvokeReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PolicyServerServer is the server API for PolicyServer service.
type PolicyServerServer interface {
	InvokePolicy(PolicyServer_InvokePolicyServer) error
}

// UnimplementedPolicyServerServer can be embedded to have forward compatible implementations.
type UnimplementedPolicyServerServer struct {
}

func (*UnimplementedPolicyServerServer) InvokePolicy(srv PolicyServer_InvokePolicyServer) error {
	return status.Errorf(codes.Unimplemented, "method InvokePolicy not implemented")
}

func RegisterPolicyServerServer(s *grpc.Server, srv PolicyServerServer) {
	s.RegisterService(&_PolicyServer_serviceDesc, srv)
}

func _PolicyServer_InvokePolicy_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PolicyServerServer).InvokePolicy(&policyServerInvokePolicyServer{stream})
}

type PolicyServer_InvokePolicyServer interface {
	Send(*InvokeReply) error
	Recv() (*InvokeRequest, error)
	grpc.ServerStream
}

type policyServerInvokePolicyServer struct {
	grpc.ServerStream
}

func (x *policyServerInvokePolicyServer) Send(m *InvokeReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *policyServerInvokePolicyServer) Recv() (*InvokeRequest, error) {
	m := new(InvokeRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _PolicyServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "policyservice.PolicyServer",
	HandlerType: (*PolicyServerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "InvokePolicy",
			Handler:       _PolicyServer_InvokePolicy_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "policy.proto",
}
